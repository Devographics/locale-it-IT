locale: it-IT
namespace: js
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.state_of_js.intro
      t: >
          Il mondo di JavaScript gioverebbe da un po' di classificazione.


          Dal 2016, questo sondaggio ha collezionato 
          dati da più di 20,000 sviluppatori ogni anno per identificare mode del momento e imminenti.


          Partecipa al sondaggio e aiutaci a scoprire quali librerie vogliono imparare gli sviluppatori,
          quali hanno il miglior indice di soddisfazione e molto altro ancora.

    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.syntax.title
      t: Sintassi
    - key: sections.syntax.description
      t: La grammatica di JavaScript.

    - key: sections.language.title
      t: Linguaggio
    - key: sections.language.description
      t: Il vocabolario di JavaScript.

    - key: sections.data_structures.title
      t: Struttura di dati
    - key: sections.data_structures.description
      t: Come salvi e manipoli dati.

    - key: sections.browser_apis.title
      t: Browser API
    - key: sections.browser_apis.description
      t: Le funzionalità fornite dal browser.

    - key: sections.other_features.title
      t: Altre funzionalità
    - key: sections.other_features.description
      t: Altre tecnologie e modelli

    - key: sections.patterns.title
      t: Modelli
    - key: sections.patterns.description
      t: Come preferisci scrivere il codice?

    - key: sections.javascript_flavors.title
      t: Sapori di JavaScript
    - key: sections.javascript_flavors.description
      t: Linguaggi che si compilano in JavaScript

    - key: sections.front_end_frameworks.title
      t: Front-end Frameworks
    - key: sections.front_end_frameworks.description
      t: Front-end frameworks e librerie

    - key: sections.datalayer.title
      t: Gestione Dati
    - key: sections.datalayer.description
      t: Caricamento e gestione dei dati nella tua applicazione

    - key: sections.back_end_frameworks.title
      t: Back-end Frameworks
    - key: sections.back_end_frameworks.description
      t: JavaScript nei server

    - key: sections.testing.title
      t: Test
    - key: sections.testing.description
      t: Strumenti per testare il tuo codice

    - key: sections.mobile_desktop.title
      t: Mobile & Computer
    - key: sections.mobile_desktop.description
      t: JavaScript per dispositivi mobile e applicazioni per computer

    ###########################################################################
    # Options
    ###########################################################################

    # CSS for print
    - key: options.css_for_print.0
      t: Non ho (quasi) mai scritto stili per stampe
    - key: options.css_for_print.1
      t: Ho occasionalmente scritto stili per stampe
    - key: options.css_for_print.2
      t: Scrivo stili per stampe nella maggior parte dei progetti
    - key: options.css_for_print.3
      t: Il mio focus principalmente su CSS per stampe

    # CSS for email
    - key: options.css_for_email.0
      t: Non ho (quasi) mai scritto CSS per email
    - key: options.css_for_email.1
      t: Ho occasionalmente scritto CSS per email
    - key: options.css_for_email.2
      t: Scrivo CSS per email nella maggior parte dei progetti
    - key: options.css_for_email.3
      t: Il mio focus principalmente su CSS per email

    ###########################################################################
    # Features
    ###########################################################################

    # syntax
    - key: features.destructuring
      t: Assegnamento di destrutturazione
    - key: features.destructuring.description
      t: 'Esempio: `const { foo } = bar`'
    - key: features.spread_operator
      t: Operatore Spread
    - key: features.spread_operator.description
      t: 'Esempio: `[...array1, ...array2]`'
    - key: features.arrow_functions
      t: Funzione a freccia
    - key: features.arrow_functions.description
      t: 'Esempio: `const foo = () => {}`'

    # language
    - key: features.proxies
      t: Proxy
    - key: features.async_await
      t: Async/Await
    - key: features.promises
      t: Oggetti Promise
    - key: features.decorators
      t: Decoratori
    - key: features.decorators.description
      t: >
          Nella sua forma più semplice un decoratore é un modo di
          avvolgere un pezzo di codice con un'altro e letteralmente "decorarlo".

    # data structures
    - key: features.maps
      t: Mappe
    - key: features.sets
      t: Sets
    - key: features.typed_arrays
      t: Typed Arrays
    - key: array_prototype_flat
      t: Array.prototype.flat

    # browser apis
    - key: features.service_workers
      t: Service Workers
    - key: features.local_storage
      t: LocalStorage
    - key: features.i18n
      t: i18n
    - key: features.web_components
      t: Componenti Web
    - key: features.web_audio
      t: Web Audio API
    - key: features.webgl
      t: WebGL
    - key: features.web_animations
      t: Animationi Web API
    - key: features.webrtc
      t: WebRTC
    - key: features.web_speech
      t: Riconoscimento Vocale Web API
    - key: features.webvr
      t: WebVR (Realtà Virtuale)
    - key: features.websocket
      t: Websocket
    - key: features.fetch
      t: Fetch API

    # other features
    - key: features.pwa
      t: Applicazione Web Progressiva (PWA)
    - key: features.wasm
      t: WebAssembly (WASM)

    # patterns
    - key: patterns.object_oriented_programming
      t: Programmazione ad Oggetti
    - key: features.functional_programming
      t: Programmazione Funzionale
    - key: features.reactive_programming
      t: Programmazione Reattiva

    ###########################################################################
    # Opinions
    ###########################################################################

    - key: opinions.js_moving_in_right_direction
      t: JavaScript si sta muovendo nella giusta direzione

    - key: opinions.building_js_apps_overly_complex
      t: Costruire applicazioni in JavaScript é eccessivamente complesso al momento

    - key: opinions.js_over_used_online
      t: JavaScript é abusato online

    - key: opinions.enjoy_building_js_apps
      t: Mi piace costruire applicazioni in JavaScript

    - key: opinions.would_like_js_to_be_main_lang
      t: Mi piacerebbe che JavaScript fosse il mio linguaggio di programmazione primario

    - key: opinions.js_ecosystem_changing_to_fast
      t: L'ecosistema JavaScript sta cambiando troppo velocemente

    - key: opinions.missing_from_js
      t: Cosa pensi manchi attualmente a JavaScript?
    - key: opinions.missing_from_js.description
      t: Funzionalità che vorresti vedere in JavaScript un giorno.
